<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pro.bs.dao.EmployeeDao">

    <resultMap id="BaseResultMap" type="com.pro.bs.model.EmployeeModel">
        <result column="id" property="empId"/>
        <result column="user_name" property="userName"/>
        <result column="user_pwd" property="userPwd"/>
        <result column="real_name" property="realName"/>
        <result column="gender" property="gender"/>
        <result column="age" property="age"/>
        <result column="user_phone" property="phoneNumber"/>
        <result column="is_delete" property="isDelete"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_time" property="createTime"/>
        <result column="delete_time" property="deleteTime"/>
    </resultMap>

    <parameterMap id="queryParam" type="com.pro.bs.model.EmployeeParam"/>
    <parameterMap id="dataParam" type="com.pro.bs.model.EmployeeModel"/>

    <!--验证登录密码-->
    <select id="verifyPwd" parameterType="hashmap"  resultType="Integer">
        SELECT count(1) FROM employee
        WHERE user_name = #{userName} AND user_pwd = #{userPwd}
    </select>

    <!--用户查询 超级查询-->


    <select id="findUserByCondition" resultMap="BaseResultMap" parameterMap="queryParam">
      SELECT * FROM employee WHERE is_delete=0
        <if test="realName != null">
            AND real_name LIKE concat(#{realName},'%')
        </if>
        <if test="gender != null">
            AND gender = #{gender}
        </if>
      ORDER BY create_time DESC
      LIMIT #{startRow}, #{pageSize}
    </select>

    <!--用户数量查询 超级查询-->
    <select id="countUserByCondition" resultType="Integer" parameterMap="queryParam">
        SELECT count(1) FROM employee WHERE is_delete=0
        <if test="realName != null">
            AND real_name LIKE concat(#{realName},'%')
        </if>
        <if test="gender != null">
            AND gender = #{gender}
        </if>
    </select>

    <!--根据ID查询用户详情-->
    <select id="getById" resultMap="BaseResultMap" parameterType="integer">
        SELECT * FROM employee WHERE id=#{empId} AND is_delete=0;
    </select>


    <!--新增用户-->
    <insert id="createUser" parameterMap="dataParam" keyProperty="empId">
        INSERT INTO employee (user_name,real_name,gender,age,user_phone,create_time,update_time)VALUES (
         #{userName}, #{realName}, #{gender},  #{age}, #{phoneNumber},now(),now())
    </insert>


    <!--更改用户信息-->
    <update id="updateUser" parameterMap="dataParam" keyProperty="empId">
        UPDATE employee SET (user_name=#{userName},gender=#{gender},age=#{age},user_phone={phoneNumber},
        updateTime=now())
        Where id=#{empId}
    </update>


    <!--逻辑删除用户-->
    <update id="deleteUser" parameterType="integer">
        UPDATE employee SET is_delete=1, delete_time=now() WHERE id=#{empId}
    </update>

    <select id="findOne" parameterType="String" resultType="Integer">
        SELECT id FROM employee WHERE user_name=#{userName} AND is_delete=0;
    </select>


</mapper>